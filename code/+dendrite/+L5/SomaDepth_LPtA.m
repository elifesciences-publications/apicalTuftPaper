util.clearAll;
% Get LPtA skeleton, correct the low-resolution coordinate and convert the
% y-axis to pia coordinate (depth relative to pia)
skel = apicalTuft('LPtA_l2vsl3vsl5');
skel = skel.correctionLowresLPtA;
skelConverted = skel.convert2PiaCoord;
%% Get tree indices to L2,L3, L5tt
dist2somaTreeIdx = skelConverted.groupingVariable(:,...
    contains(skelConverted.groupingVariable.Properties.VariableNames,...
    'dist2soma'));
trIdxL2_5tt = dist2somaTreeIdx(:,1:3);
%% Get somatic depth
somaDepthAll = dendrite.L5.somaDepth.getSkeleton...
    (skelConverted,trIdxL2_5tt.Variables);
depthRanges = ...
    cellfun(@util.math.returnMinMax,somaDepthAll,'UniformOutput',false);
allRangeArray = cat(1,depthRanges{:});
allRangeT = array2table(allRangeArray,'VariableNames',...
    {'MinDepth','MaxDepth'},'RowNames',...
    trIdxL2_5tt.Properties.VariableNames);
outputFolderRanges = fullfile(util.dir.getFig(5),...
    'somaDepthRanges');util.mkdir(outputFolderRanges);
writetable(allRangeT,fullfile(outputFolderRanges,'somaDepthRanges_LPtA.txt'),...
    'WriteRowNames',true);